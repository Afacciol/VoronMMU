# [include clean_nozzle.cfg]

[gcode_macro START_PRINT]
gcode:
#----Get Variables----#
# This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#TEMPERATURE#
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|default(210)|int %}
  {% set target_chamber = params.CHAMBER|default(40)|int %}
#LAYER,NOZZLE,FILAMENT#
  {% set layer_height = params.INITIAL_LAYER|default(0.2)|float %} # layer height for the print (LAYER_HEIGHT)
  {% set filament_diameter = params.FILAMENT_DIAMETER|default(1.75)|float %} # filament diameter
  {% set filament_type = params.FILAMENT_TYPE %}
  {% set extrusion_width = params.EXTRUSION_WIDTH|default(0.42)|float %} # extrusion width goal for one line
#OTHERS#
  {% set bed_margin = 0.1 %}
  {% set line_lenght = printer.toolhead.axis_maximum.x - bed_margin %} #line lenght
  {% set z_hop_height  = 2 * layer_height %}
  {% set e_per_mm = ((extrusion_width - layer_height) * layer_height + 3.14159 * (layer_height / 2)**2) / (3.14159 * (filament_diameter / 2)**2) %} # computed E factor (similar to Slic3r/PrusaSlicer/SuperSlicer)
  {% set spacing = extrusion_width - layer_height * (1 - 3.14159 / 4) %} # line spacing during the print
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

#----Initialize----#
  # M107            ; disable fans
  M140 S{target_bed}
  M104 S150
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=120 MAXIMUM=150   # Wait for hotend temp
  G21             ; set to mm
  M220 S100       ; set print speed to 100%
  M221 S100       ; set flow rate to 100%
  G92 E0          ; set extruder to zero
# Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  BED_MESH_CLEAR
  {% if "xyz" not in printer.toolhead.homed_axes %}   # Check Home the printer and QGL
    G28
  {% endif %}
  G90                   # Absolut position
  M83
  M190 S{target_bed}   # Wait for bed to reach temperature
  MMU_START_LOAD_INITIAL_TOOL
#----Quad Gantry level----#
  {% if printer.quad_gantry_level.applied == False %}
        QUAD_GANTRY_LEVEL
        G28 Z
  {% endif %}
#----Bed Mesh----#
  STATUS_MESHING
  BED_MESH_CALIBRATE
  STATUS_HEATING
  G1 X30 Y304 F6000
#----Final Heat----#
  M109 S{target_extruder}   # preheat extruder
  PRIMING
  STATUS_PRINTING
  
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    G90                                      ; absolute positioning
    G10
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G92 E0
    G1 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} E-1.0 F3600  ; park nozzle at rear
    # M400                           ; wait for buffer to clear
    G10
    TURN_OFF_HEATERS
    M107                                     ; turn off fan
    # SET_FAN_SPEED FAN=nevermore SPEED=0
    # SET_FAN_SPEED FAN=exhaust_fan SPEED=0
    BEEP DUR=300
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    # M84 #turn off steppers

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0