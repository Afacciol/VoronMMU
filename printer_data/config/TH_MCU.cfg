# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_30002A000B50304158373420-if00
#canbus_uuid: 0e0d81e4210c

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 23.0191354   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: EBBCan: PA3
#control = pid
#pid_kp = 21.599
#pid_ki = 1.618
#pid_kd = 72.089
min_temp: 0
max_temp: 300
min_extrude_temp: 180
max_extrude_cross_section: 51
max_extrude_only_distance: 51

pressure_advance: 0.035
pressure_advance_smooth_time: 0.040

sensor_type: MAX31865
sensor_pin: EBBCan: PA4
spi_bus: spi1
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2
#rtd_use_50Hz_filter: True

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: False
run_current: 0.65
hold_current: 0.10
sense_resistor: 0.110
stealthchop_threshold: 0		# Spreadcycle (better for extruder)

[temperature_sensor Toolhead]
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3

[fan]
pin: EBBCan: PA1


[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
fan_speed: 1
heater_temp: 50.0

#####################################################################
#	Probe
#####################################################################

[probe]
pin: !EBBCan: PB9
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10 # original 5
samples: 3
samples_result: median
sample_retract_dist: 2
samples_tolerance: 0.025
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}



